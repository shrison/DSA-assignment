#include <iostream>
using namespace std;

// structure -> Employee database
struct Employee
{
int id;
string name;
 int key;
};

// class
class Hashtable {

private:
 Employee Table[10];

public:
 // functions declaration
void insertion();
void deletion();
void searching();
void display();
// hash function
int hashfunction(int key);
// constructor
Hashtable();
// destructor
~Hashtable();

};

// functions defination


// Deletion
void Hashtable :: deletion()
{
int x, i;
 cout<<"\n # Delete Data: "<<endl;
cout << "Enter id to be deleted" << endl;
 cin >> x;
 for (i = 0; i < 10; i++)
 {
 if (x == Table[i].id)
 {
 Table[i].id = -1;
 Table[i].key = -1;
 Table[i].name = "null";
 }
 }
}


// Searching
void Hashtable :: searching()
{
 int iKey, j;
 cout<<"\n# Search Data: "<<endl;
 cout << "Enter the id to be searched " << endl;
 cin >> iKey;

 for (j = 0; j < 10; j++)
 {
 if (iKey == Table[j].id)
 {
 cout << "Employee found at index " << j << endl;
 }
 }
 }


// Hash_Function
int Hashtable :: hashfunction(int key)
 {
 return key % 10;
}


// Constructor
Hashtable :: Hashtable()
{
 for (int i = 0; i < 10; i++)
 {
 Table[i].id = -1;
 Table[i].key = -1;
Table[i].name = "null";
}
 cout<<"\nConstructor.."<<endl;
}


// Destructor
Hashtable :: ~Hashtable()
 {
cout<<"\nDestroyed..\n"<<endl;
}


// Insertion
void Hashtable :: insertion()
 {
     int id, flag = 0;
 string name;
 cout<<"\n# Insert Data: "<<endl;
 cout << "Enter Employee Id " << endl;
 cin >> id;
 cout << "Enter Employee Name " << endl;
cin >> name;

 int index = hashfunction(id);

 int c = index;

 while (Table[index].key != -1 && flag == 10)
 {
 index = (index + 1) % 10;
 flag++;
 }
Table[index].id = id;
 Table[index].name = name;
 Table[index].key = c;
 }

// display
void Hashtable :: display()
 {
 cout<<"\nEmployee Data: "<<endl;
 cout << "Key  Id  Name " << endl;

 int j = 0;
 for (j = 0; j < 10; j++)
{
 cout << " " << j << "   " << Table[j].id << "  " << Table[j].name << endl;
}
 }


// main function
int main()
{

 int ch;
 Hashtable h;

 // Menu driven program
 do
 {
 // Menu
cout << endl;
 cout << "# Hashing Menu:" << endl;
cout << "1.Insert Data" << endl;
 cout << "2.Delete Data" << endl;
 cout << "3.Search Data" << endl;
cout << "4.Display Data" << endl;
 cout << "0.Exit" << endl;

// Enter your choice
 cout << "Enter your choice: ";
 cin >> ch;

 // switch caseh
switch (ch)
 {
case 1:
h.insertion();
 break;

case 2:
h.deletion();
break;

case 3:
 h.searching();
break;

 case 4:
 h.display();
 break;

 case 0:
goto end;
 break;

 default:
cout << "Incorrect Choice!" << endl;

 }
} while (1);

end:
cout<<"You are exit!"<<endl;
return 0;
}
